<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAQAAAAAAAAAAAAAAAEAAAAB
        AAAAZgAAD2EEAABpAAAIbgAAD2QIAAtqCQARZgoABnAAAABuEQAsfAAAKnYKACp8DQAqdxkABHQiADJv
        KQAjeyIAAHxCABp4RAAAf1gADn1/ABl5fgBkVVUAalhUAGZaWgBqWloAc1VXAHJfVgBwXVoAfFpbAFpz
        SQBmfEYAdWJbAHllWwBmdFQAXU93AGFReAB0YWAAeWVjAHNiaAB8Z2kAf2ltAH11ZAByYXQAeWJ7APEL
        eQDwEHgAwz93AOYlfwD/JngAgV1eALpOVgCBa14Ask54AK9ffACCbGMAgmtsAIpvawCIcWQAgnlkAIRx
        awCIcW0Ah3hvAJ17bQCIbnIAhnB0AItydACLdHgAjn14AJR0ewCfc30AlXx6AJl7fQCgfm8ApWV6AKln
        fACkbXwAon5wAMFLUgDEUFYAxVRaAMxVWwDGWF4Az1pfANhcXgDiYV0A0lpgANteYQDZXWgAy0J9AP9U
        bgD8SXAA1XJwAOJjYQAnhwAALYMAACyKAAArgg4ANYoIACmFEQAegDsARYMeAEyEIwCSgHsAp4h5AP6s
        VQD/oFoA/KtYAP+zVADwtV8A94VmAPCsYAD8smQA/Lp0ADkXuQA1LLsAMzKxAHMzmwAAY5wAG2mcAABq
        pgACeK4AAHSyAAB6tAAAersAIW2gACJ0qgAofLkAW0yLAFhLlwB7co8AeW+YAG1ipQBwZKIAAwjMABIN
        wAAKBNUAAwjSAAAA3gADCNgAAAHkAAAA6wAQDOYAExDjAAIC9AAAAPsAAHzFAGtl0ABxbdYAd3PWAF5f
        /wBeYP8AY2P0AGlo9QBlZv8Aa2v+AHFv/QBzc/8AfH3/AP4DggD+CYEA8heBAJ17ggCifuYAD4aNAACP
        nAABg7sAAIHIAACbyAAAntgAAKHLAACg5wAPpvUAD630AACm/gAAqf4AALf/AAG9/gA3tOoATrPEAG2/
        1AAAw+UAAMX/AADL/wAA0v4AANr/AC7X7QAnyvcAAOP3AADi/wAA6/8ACOv8AAD3/wB1yt8AbNvuALWL
        gwCoqr4AwYWCANmPhgDnkIkA5J+ZAP+SlAD+lZkA85ieAP6cnADPpYUA1a+LANytnQDtvZAA6pKtAPGZ
        qwDEqLIA/6OhAP6rpQD3saIA/rOpAP+5rAD/vrAA/8OHAOzAlQD/y5UA/82YAP/QlwD/0qMA/9atAP/a
        qwDrzb8A/8ezAPzbtwD/4LUAioTHAJKK7QCbnO0AhIPyAIaG/wCFiP8Aioj8AIyS/wCRkf8Am5D4AJac
        /wCen/8AtJnmAL2v4gCspv0AzZTJAN2kygDMsc0AgsXNAKrl6QDA2tIA5NbeAP7jwQD/7MsA7+fRAP/1
        1gAAAAAA/////////////////////////////////////////////////////////////0RGRkf/////
        /////////////////////////////0FEOmQMKaFG//////////////////////////////9BQR5hXQcF
        HUdH//////////////////////////83PyllX15eBwUFDj2hRv//////////////////////ODweYV9e
        XgkHBQUFBiFGRv//////////////////Nzkrc2JfXl4JCQUFBQUFBi5FZkb//////////////zY2gI6L
        YF9eCQkPDQAFBQUGLKA1Zkb//////////yUzKnKPj4oLXgkJEaWqEgUFBQSgnp9YR2b///////8lJX+O
        kIyMiAteDBORpq6upAgFBKCfn54vSkZH/////yAjj5CMDw8PDw8P/v7+/v7+ioqKioqKn56gS2b/////
        ICOPjIsPXV1dXQ/+/v////6KioqKioqfn59KZv////8gI4yLiw9dXV1dD/7//v7+/4qKioqKip+fn0lm
        /////yAji4uHD11dXV0P/v/+/v7/ioqKioqKnp6fSUP/////HyKLcTQPXV1dXQ/+//7+/v+KioqKiopt
        MJ5JQ/////8fI3RXVA9dXV1dD/7+//7//oqKioqKimtpWklD/////xgxXFZVD11dXV0P/v7+//7+ioqK
        ioqKaGtoTEL/////GDFVVVAPXV1dXQ/+/v/+//6KioqKiopoaGpMQf////8XHFJQTg9dXV1dD/7//v7+
        /4qKioqKimhoakxB/////xccUE1RD11dXV0P/v/+/v7/ioqKioqKaGhqPkD/////FxxOW9UPXV1dXQ/+
        /v////6KioqKiorZb2g+QP////8VGcXi4g8PDw8PD/7+/v7+/oqKioqKitvbcD4//////xgVO87i19TT
        y8nJyNCi7vr8++Pf3tvb3dpnNz////////8VGMLW1tPLycn0652amvL75N/e3NvMQShB//////////8V
        FTjH1MvR8ezqnZyZlebh4N7aZyc3//////////////8YFRvE9fPv7eudnJqZlpv2zTwmN///////////
        ////////FRWB5/Dt6Z2cmpmZl4QlJf//////////////////////GBUm5e3pnZyamZIqICX/////////
        /////////////////xYWguidnJiDHx///////////////////////////////xgWKpSTKhom////////
        //////////////////////////8WGBgb////////////////////////////////////////////////
        /////////////////////D////AP///gB///gAH//wAA//wAAD/4AAAf4AAAD8AAAAPAAAADwAAAA8AA
        AAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAAD8AAAB/gAAB/8AAA//wAA//+A
        Af//4Af///AP///8P///////
</value>
  </data>
</root>